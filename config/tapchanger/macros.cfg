[gcode_macro TOOLCHANGE_DEMO]
gcode:
    {% for n in range(20) %}
      T{ printer.toolchanger.tool_numbers | random }
    {% endfor %}

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    # QUAD_GANTRY_LEVEL
    Z_TILT_ADJUST
    TOOL_BED_MESH_CALIBRATE
    G28 Z

[gcode_macro PRINT_STATUS]
gcode: 
  RESPOND TYPE='echo' MSG="Status for M190 {params.OBJ} is { printer[params.OBJ] }"
#python:
#  gcode.RESPOND(TYPE='echo', MSG=f"Status for M190 {params.OBJ} is { printer[params.OBJ] }")

[gcode_macro _PARK_ON_COOLING_PAD]
gcode:
  G90 ; Absolute positioning
  G0 X290 Y5 Z5 F5000
  G0 Z0 F600

[gcode_macro _MOVE_TO_BUCKET]
gcode:
    ; select left/right bucket randomly
    ; higher range before random helps slightly with uniformity of results
    {% set x_pos = 1 + 70 * ((range(0, 100) | random) / 100) | round %}
    G0 X{x_pos} Y306 F36000

[gcode_macro _MOVE_TO_BRUSH]
gcode:
    ; select left/right bucket randomly
    ; higher range before random helps slightly with uniformity of results
    {% set x_pos = 200 + 70 * ((range(0, 100) | random) / 100) | round %}
    G0 X{x_pos} Y306 F36000
    G0 Z0 F36000

[gcode_macro _BRUSH_NOZZLE]
gcode:
    {% set th = printer.toolhead %}
    {% set old_pos_x = th.position.x %}
    {% set old_pos_y = th.position.y %}
    M400
    G90
    {% for i in range(3) %}
        G0 X270 Y306 F36000
        G0 X200 Y306 F36000
    {% endfor %}
    {% for i in range(3) %}
        G0 X270 Y305 F36000
        G0 X200 Y305 F36000
    {% endfor %}
    {% for i in range(3) %}
        G0 X270 Y306 F36000
        G0 X200 Y306 F36000
    {% endfor %}
    # go back to previous position
    G0 X{old_pos_x} Y{old_pos_y} F36000

[gcode_macro _WIPE_NOZZLE]
gcode:
    {% set th = printer.toolhead %}
    {% set old_pos_x = th.position.x %}
    {% set old_pos_y = th.position.y %}
    {% if params.TIME is not defined %}
      {% set clean_time = 3|int %}
    {% else %}
      {% set clean_time = params.TIME|int %}
    {% endif %}
    M400
    G90
    {% for i in range(clean_time) %}
        G0 X71 Y306 F36000
        G0 X1 Y306 F36000
        G0 X71 Y305 F36000
        G0 X1 Y305 F36000
    {% endfor %}
    # go back to previous position
    G0 X{old_pos_x} Y{old_pos_y} F36000


[gcode_macro CLEAN_NOZZLE]
description: Clean nozzle on nozzle cleaning pad.
gcode:
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  {% if params.MODE is not defined %}
    {% set clean_mode = 'default' %}
  {% else %}
    {% set clean_mode = params.MODE %}
  {% endif %}
  {% if params.TEMP is not defined %}
    {% set clean_temp = 250.0 %}
  {% else %}
    {% set clean_temp = params.TEMP|float %}
  {% endif %}
  {% set heater =  printer.toolhead.extruder %}
  M104 S{clean_temp}
  {% if clean_mode|lower == 'default' %}
    RESPOND TYPE=echo MSG="Cleaning nozzle for probe"
    _MOVE_TO_BUCKET
    M109 S{clean_temp}
    _WIPE_NOZZLE
    G1 E25.0 F800
    G92 E0
    G1 E-20.0 F800
    G92 E0
    M104 S180
    M106 S255
    M109 S180
    _WIPE_NOZZLE
  {% elif clean_mode|lower == 'start' %}
    RESPOND TYPE=echo MSG="Cleaning nozzle for start"
    _MOVE_TO_BUCKET
    M109 S{clean_temp}
    _WIPE_NOZZLE
    G1 E28.0 F800
    G92 E0
    M104 S180
    M106 S255
    M109 S180
    _WIPE_NOZZLE
  {% elif clean_mode|lower == 'cal' %}
    RESPOND TYPE=echo MSG="Cleaning nozzle for calibration"
    _MOVE_TO_BRUSH
    M109 S{clean_temp}
    _BRUSH_NOZZLE
    G92 E0
    M104 S180
    M106 S255
    M109 S180
    _BRUSH_NOZZLE
  {% endif %}
  M104 S0 # Set temp to 0
  M106 S0
  RESTORE_GCODE_STATE NAME=clean_nozzle_state

[gcode_macro _CLEAN_NOZZLE_FOR_START]
description: Clean nozzle on nozzle cleaning pad.
gcode:
  RESPOND TYPE=echo MSG="Cleaning nozzle for start"
  {% set heater =  printer.toolhead.extruder %}
  M104 S{params.TEMP}
  _MOVE_TO_BUCKET
  M109 S{params.TEMP}
  _WIPE_NOZZLE
  G1 E28.0 F800
  G92 E0
  M104 S180
  M106 S255
  M109 S180
  _WIPE_NOZZLE
  M104 S0 # Set temp to 0
  M106 S0

# [gcode_macro _WIPE_NOZZLE]
# description: Wipe the nozzle on the pad
# gcode:
#   G90     
#   G0 X295 Y2 Z5 F5000
#   G0 Z0.1
#   G0 Y5 F500
#   G0 Y5 F500
#   G0 Y5 F500
#   G0 Y5 F500
#   G0 Y5 Z1 F500
#   G0 Z-0.1 F60
#   G0 Z5 F600
  
[gcode_macro _PURGE_LINE]
description: Helper: purge before print
variable_extrude: 1.0
gcode:
  RESPOND TYPE=echo MSG="purging line"
  {% set heater =  printer.toolhead.extruder %}
  G90
  M104 S150
  G0 Z5 F1400
  G0 X298 Y5 F6000
  M109 S{params.TEMP}
  G0 Z1 F1400
  G92 E0
  G1 E25.0 F800
  G92 E0
  G0 Z0.4 F1400
  G1 X250 Y5 E12 F1800
  # G1 X250 Y5.4 E0.08 F1800
  # G1 X298 Y5.4 E12 F1800
  G1 Z2.0 F200
  G1 Y10 F1800
  G92 E0

[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 100mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=2
  G0 Z0 F600
  M84

[gcode_macro UNSAFE_RAISE_BED]
description: Raise the bed 100mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z50 F600
  M84

[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        M109 S{ max_temp }
    {% endif %}


[gcode_macro PRINT_START]
variable_printing: False
gcode:
  ##SET_LED LED=led RED=1 GREEN=0.4 BLUE=0
  # CHANGE_LED LED=
  M140 S{ params.BED_TEMP }

  M117 initializing  
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
  INITIALIZE_TOOLCHANGER
  M117 homing
  G28
  # Clean all the hotends in use
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP' %}
    {% if tooltemp_param in params %}
      {% if not params.TOOL == tool_nr|string %}
        T{tool_nr}
        CHANGE_LED LED={tool_nr|string}
        STATUS_CLEANING
        CLEAN_NOZZLE TEMP=250 MODE=START #{ params.TOOL_TEMP|int - 30 }
      {% endif %}
    {% endif %}
  {% endfor %}

  M117 Changing initial tool
  {% if params.TOOL is defined %}
    T{params.TOOL}
    CHANGE_LED LED={params.TOOL}
    STATUS_CLEANING 
  {% endif %}

  M117 Cleaning the nozzle
  CLEAN_NOZZLE TEMP=250 #{ params.TOOL_TEMP|int - 30 }
  M117 Heating up the bed
  RESPOND TYPE=echo MSG="Heating up the bed"
  M190 S{ params.BED_TEMP }

  STATUS_CALIBRATING_Z
  M117 Calibrating bed
  RESPOND TYPE=echo MSG="Calibrating bed"
  M109 S150 ; Heat up nozzle to soften any leftover filament for homing.
  G32 ; Home, gantry tram
  # BED_MESH_PROFILE LOAD=default 
  M109 S0 # Stop to heat, the actual printing may happen with a different hotend.

  M117 Heating up the hotends
  RESPOND TYPE=echo MSG="Heating up the hotends"
  # # Preheat all the hotends in use
  # {% for tool_nr in printer.toolchanger.tool_numbers %}
  #   {% set tooltemp_param = 'T' ~ tool_nr|string ~ '_TEMP' %}
  #   {% if tooltemp_param in params %}
  #     M104 T{tool_nr} S{params[tooltemp_param]}
  #     CHANGE_LED LED={tool_nr|string}
  #     STATUS_HEATING 
  #   {% endif %}
  # {% endfor %}

  {% if params.TOOL is defined %}
    T{params.TOOL}
    CHANGE_LED LED={params.TOOL}
  {% endif %}
  
  RESPOND TYPE=echo MSG="PARK_ON_COOLING_PAD"
  STATUS_READY
  _PARK_ON_COOLING_PAD

  _PURGE_LINE temp={ params.TOOL_TEMP }
  M109 S{ params.TOOL_TEMP }
  G0 Z2 F300 ;Move up a bit
  G92 E0 ; Zero extruder
  START_TOOL_PROBE_CRASH_DETECTION
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=True
  M117 Printing
  ##SET_LED LED=led RED=0.7 GREEN=0.7 BLUE=0.5
  STATUS_PRINTING

[gcode_macro PRINT_END]
gcode:
  STOP_TOOL_PROBE_CRASH_DETECTION
  SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=printing VALUE=False
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-20.0 F1800                ; retract filament
  G92 E0                         ; zero the extruder

  G91                            ; relative positioning
  #   Get Boundaries
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

  #   Check end position to determine safe direction to move
  {% if printer.toolhead.position.x < (max_x - 20) %}
      {% set x_safe = 20.0 %}
  {% else %}
      {% set x_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.y < (max_y - 20) %}
      {% set y_safe = 20.0 %}
  {% else %}
      {% set y_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.z < (max_z - 20) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}

  G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
  G0 Z{z_safe} F3600             ; move nozzle up

  TURN_OFF_HEATERS
  M107                           ; turn off fan
  M140                           ; turn off bed

  G90                            ; absolute positioning
  {% set tool = printer[printer.toolchanger.tool] %}
  # G0 X{tool.params_park_x} Y{tool.params_safe_y} F3600          ; park nozzle up top
  G0 X290 Y300 F3600
  M18                            ; Motors off
  M117 Print done
  # turn off all leds
  {% for tool_nr in printer.toolchanger.tool_numbers %}
    CHANGE_LED LED={tool_nr|string}
    STATUS_OFF
  {% endfor %}
  SET_PIN PIN=COB_LED VALUE=0
  # FIRMWARE_RESTART

[gcode_macro LOAD_FILAMENT]
variable_ignore_min_extrude_temp: True
gcode:
  #M117 Loading
  M104 S240
  G90 ; Absolute pos
  G1 X100 Y20 Z20 F1800 ; Move to center
  M109 S240 ;Heat up the filament
  M83                            ; set extruder to relative
  G1 E50 F300                   ; extrude 5 cm
  G1 E50 F300                   ; extrude 5 cm
  G1 E-4 F1800                  ; retract some
  M82                           ; set extruder to absolute
  M400                          ; wait for buffer to clear
  M104 S0                       ; Stop heating
  #M117 Loading done

[gcode_macro UNLOAD_FILAMENT]
variable_ignore_min_extrude_temp: True
gcode:
  #M117 Unloading
  M109 S240 ;Heat up the filament
  M83                           ; set extruder to relative
  G1 E5 F500                   ; extrude 5 mm
  G1 E-50 F1000                   ; retract 5 cm
  G1 E-50 F1000                   ; retract 5 cm
  M82                            ; set extruder to absolute
  M400                          ; wait for buffer to clear
  TURN_OFF_HEATERS
  #M117 Unloading done


[gcode_macro UNLOAD_ONE_FILAMENT]
gcode:
  #M117 Unloading {params.TOOL}
  M109 T{params.TOOL} S240 ;Wait until heated
  {% set tool_name = printer.toolchanger.tool_names[params.TOOL|int] %}
  {% set extruder = printer[tool_name].extruder %}
  M109 T{params.TOOL} S240 ;Heat up the filament
  ACTIVATE_EXTRUDER EXTRUDER={extruder}
  M83                           ; set extruder to relative
  G1 E5 F500                   ; extrude 5 mm
  G1 E-50 F1000                   ; retract 5 cm
  G1 E-50 F1000                   ; retract 5 cm
  M82                            ; set extruder to absolute
  M400                          ; wait for buffer to clear
  TURN_OFF_HEATERS
  #M117 Unloading done

[gcode_macro UNLOAD_ALL_FILAMENT]
gcode:
  {% set tools = printer.toolchanger.tool_names %}
  #M117 Unloading
  {% for tool in tools %}
    M104 T{printer[tool].tool_number} S240 ;Heat up the filament
  {% endfor %}
  {% for tool in tools %}
    M109 T{printer[tool].tool_number} S240 ;Wait until heated
    ACTIVATE_EXTRUDER EXTRUDER={printer[tool].extruder}
    M83                           ; set extruder to relative
    G1 E5 F500                     ; extrude 5 mm
    G1 E-50 F1000                   ; retract 5 cm
    G1 E-50 F1000                   ; retract 5 cm
  {% endfor %}
  M400                          ; Finish all th emoves
  M82                            ; set extruder to absolute
  TURN_OFF_HEATERS
  #M117 Unloading done

[gcode_macro CHANGE_NOZZLE]
gcode:
  #M117 Nozzle change
  M104 S240
  G90 ; Absolute pos
  G1 X175 Y5 Z100 F1800 ; Move to front
  M109 S240 ;Heat up the filament
  M83                            ; set extruder to relative
  G1 E5 F250                   ; extrude 5 mm
  G1 E-50 F1000                ; retract 5 cm
  M82                            ; set extruder to absolute
  #M117 Ready to swap

  
[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = " T="~params.T %}
    CHANGE_LED LED={params.T}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
      {% if params.S|float > 160 %}
        STATUS_HEATING
      {% else %}
        STATUS_READY
      {% endif %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}


# [gcode_macro M109]
# rename_existing: M109.1
# description: [T<index>] [S<temperature>]
#   Set tool temperature and wait.
#   T= Tool number, optional. If this parameter is not provided, the current tool is used.
#   S= Target temperature
# gcode:
#   {% if params.T is defined %}
#     {% set newparameters = " T="~params.T %}
#     {% if params.S is defined %}
#       {% set newparameters = newparameters ~ " TARGET="~params.S %}
#     {% endif %}
#     SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
#   {% else %}
#     M109.1 {rawparams}
#   {% endif %}


[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}    
    {% set aExtruder = "extruder" ~ (params.T if params.T != '0' else "") %}
  {% else %}
    {% set activeToolNumber = printer.tool_probe_endstop.active_tool_number|int %} 
    {% if activeToolNumber == -1 %}
      RESPOND TYPE=error MSG='Failed to detect active tool'
      PAUSE
    {% endif %}
    {% set aExtruder = "extruder" ~ (activeToolNumber if activeToolNumber != 0 else "") %}
  {% endif %}
  {% if params.S is defined %}
    {% set temp = params.S|float %}
    M104 {rawparams}
    {% if temp > 100 %}
      TEMPERATURE_WAIT SENSOR={aExtruder} MINIMUM={temp-1} MAXIMUM={temp+1}
    {% endif %}
  {% else %}
    M104 {rawparams}
  {% endif %}   

[gcode_macro CHANGE_LED]
gcode:
  {% if params.LED is defined %}
    {% set led_name = "sb_leds" ~  params.LED %} 
    # RESPOND TYPE=echo MSG="{led_name}"
    SET_GCODE_VARIABLE MACRO=_sb_vars VARIABLE=logo_led_name VALUE='"{led_name|string}"'
    SET_GCODE_VARIABLE MACRO=_sb_vars VARIABLE=nozzle_led_name VALUE='"{led_name|string}"'
  {% else %}
  {% endif %}  

[gcode_macro _RESTORE_TOOLS_TEMP]
variable_temp_t0: '0'
variable_temp_t1: '0'
variable_temp_t2: '0'
variable_temp_t3: '0'
variable_temp_t4: '0'
variable_temp_t5: '0'
variable_temp_t6: '0'
variable_temp_t7: '0'
variable_temp_t8: '0'
variable_temp_t9: '0'
variable_temp:[0,0,0,0,0,0,0,0,0,0]
gcode:
  {% set numbers = printer.toolchanger.tool_numbers %}
  {% for tool_nr in numbers %}
    {% set temp_name = "temp_t" ~ tool_nr %}
    {% set temp = printer["gcode_macro _RESTORE_TOOLS_TEMP"][temp_name]|int %}
      # RESPOND TYPE=echo MSG="{tool_nr,temp}" #,printer.toolchanger[tools][names[tool_nr]],tool_nr,numbers,names,names[tool_nr],printer.toolchanger,
      M104 T{tool_nr} S{temp}
  {% endfor %}
  {% for tool_nr in numbers %}
    {% set temp_name = "temp_t" ~ tool_nr %}
    {% set temp = printer["gcode_macro _RESTORE_TOOLS_TEMP"][temp_name]|int %}
      # RESPOND TYPE=echo MSG="{tool_nr,temp}" #,printer.toolchanger[tools][names[tool_nr]],tool_nr,numbers,names,names[tool_nr],printer.toolchanger,
      M109 T{tool_nr} S{temp}
  {% endfor %}

[gcode_macro _SAVE_TOOLS_TEMP]
gcode:
  {% set numbers = printer.toolchanger.tool_numbers %}
  {% set names = printer.toolchanger.tool_names %}
  {% for tool_nr in numbers %}
    {% set extruder = printer[printer[names[tool_nr]].extruder] %}
    {% set temp = extruder.target if extruder != '' else 0 %}
    RESPOND TYPE=echo MSG="{extruder,temp}" #,printer.toolchanger[tools][names[tool_nr]],tool_nr,numbers,names,names[tool_nr],printer.toolchanger,
    SET_GCODE_VARIABLE MACRO=_RESTORE_TOOLS_TEMP VARIABLE={"temp_t" ~ tool_nr|string} VALUE='"{temp|string}"'
    M104 T{tool_nr} S0
    CHANGE_LED LED={tool_nr|string}
    STATUS_OFF
  {% endfor %}

# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# variable_park: True
# gcode:
#   ## Move head and retract only if not already in the pause state and park set to true
#   {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
#     _TOOLHEAD_PARK_PAUSE_CANCEL
#   {% endif %}
#   G92 E0                         ; zero the extruder
#   G1 E-20.0 F1800                ; retract filament
#   TURN_OFF_HEATERS
#   M106 S0
#   CANCEL_PRINT_BASE


# [gcode_macro PAUSE]
# description: Pause the actual running print
# rename_existing: PAUSE_BASE
# gcode:
#   PAUSE_BASE
#   _TOOLHEAD_PARK_PAUSE_CANCEL

# [gcode_macro RESUME]
# description: Resume the actual running print
# rename_existing: RESUME_BASE
# gcode:
#   ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
#   {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
#   #### get VELOCITY parameter if specified ####
#   {% if 'VELOCITY' in params|upper %}
#     {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
#   {%else %}
#     {% set get_params = "" %}
#   {% endif %}
#   ##### end of definitions #####
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     M83
#     G1 E{extrude} F2100
#     {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}
#   RESUME_BASE {get_params}

# [gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
# description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
# variable_extrude: 1.0
# gcode:
#   ##### set park positon for x and y #####
#   # default is your max posion from your printer.cfg
#   {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
#   {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
#   {% set z_park_delta = 2.0 %}
#   ##### calculate save lift position #####
#   {% set max_z = printer.toolhead.axis_maximum.z|float %}
#   {% set act_z = printer.toolhead.position.z|float %}
#   {% if act_z < (max_z - z_park_delta) %}
#     {% set z_safe = z_park_delta %}
#   {% else %}
#     {% set z_safe = max_z - act_z %}
#   {% endif %}
#   ##### end of definitions #####
#   {% if printer.extruder.can_extrude|lower == 'true' %}
#     M83
#     G1 E-{extrude} F2100
#     {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
#   {% else %}
#     {action_respond_info("Extruder not hot enough")}
#   {% endif %}
#   {% if "xyz" in printer.toolhead.homed_axes %}
#     G91
#     G1 Z{z_safe} F900
#     G90
#     G1 X{x_park} Y{y_park} F6000
#     {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
#   {% else %}
#     {action_respond_info("Printer not homed")}
#   {% endif %}


